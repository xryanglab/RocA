#!/usr/bin/env python
# -*- coding:UTF-8 -*-
'''
@Author: Li Fajin
@Date: 2019-10-11 09:53:32
@LastEditors: Li Fajin
@LastEditTime: 2019-10-11 10:19:26
@Description: Process the ribosome counts at each position generated by RiboDensityAtEachPosition.py
'''


import sys
import numpy as np
from optparse import OptionParser

def create_parser():
	'''argument parser'''
	usage="usage: python %prog [options]"
	parser=OptionParser(usage=usage)
	parser.add_option("-i","--input",action="store",type="string",dest="density_file",help="Input file generated by RiboDensityAtEachPosition.py")
	parser.add_option("-l","--left-position",action="store",type="int",default=None, dest="leftPos", help="left position of interested region.")
	parser.add_option("-r","--right-position",action="store",type="int",default=None,dest="rightPos",help="right position of interested region.")
	parser.add_option("-o","--output",action="store",type="string",dest="outputFile",help="Output file name.[required]")
	return parser

def CountRPFs(inputFile,outputFile,leftPos,rightPos):
    with open(inputFile,'r') as fin, open(outputFile,'w') as fout:
        i=0
        for line in fin:
            i+=1
            if i==1:
                fout.write("%s\t%s\n" %("transcript","counts"))
                continue
            trans_id=line.strip().split("\t")[0]
            counts_vec=[int(i) for i in line.strip().split("\t")[1:]]
            if not leftPos or not rightPos:
                counts_sum=np.sum(counts_vec)
            elif leftPos and rightPos:
                counts_sum=np.sum(counts_vec[int(leftPos)-1:int(rightPos)])
            else:
                raise IOError("Please input correct parameters!")
            fout.write("%s\t%s\n" %(trans_id,str(counts_sum)))
def main():
    parser=create_parser()
    (options,args) = parser.parse_args()
    CountRPFs(options.density_file,options.outputFile,options.leftPos,options.rightPos)

if __name__=="__main__":
    main()